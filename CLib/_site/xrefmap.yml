### YamlMime:XRefMap
sorted: true
references:
- uid: CLib
  name: CLib
  href: api/CLib.html
  commentId: N:CLib
  fullName: CLib
  nameWithType: CLib
- uid: CLib.Cosys
  name: Cosys
  href: api/CLib.Cosys.html
  commentId: T:CLib.Cosys
  fullName: CLib.Cosys
  nameWithType: Cosys
- uid: CLib.Cosys.Init
  name: Init()
  href: api/CLib.Cosys.html#CLib_Cosys_Init
  commentId: M:CLib.Cosys.Init
  fullName: CLib.Cosys.Init()
  nameWithType: Cosys.Init()
- uid: CLib.Cosys.Init*
  name: Init
  href: api/CLib.Cosys.html#CLib_Cosys_Init_
  commentId: Overload:CLib.Cosys.Init
  isSpec: "True"
  fullName: CLib.Cosys.Init
  nameWithType: Cosys.Init
- uid: CLib.DeviceChecker
  name: DeviceChecker
  href: api/CLib.DeviceChecker.html
  commentId: T:CLib.DeviceChecker
  fullName: CLib.DeviceChecker
  nameWithType: DeviceChecker
- uid: CLib.DeviceChecker.GetInstalledDevices(System.Collections.Generic.List{System.String},System.Collections.Generic.List{DeviceInfo})
  name: GetInstalledDevices(List<string>, List<DeviceInfo>)
  href: api/CLib.DeviceChecker.html#CLib_DeviceChecker_GetInstalledDevices_System_Collections_Generic_List_System_String__System_Collections_Generic_List_DeviceInfo__
  commentId: M:CLib.DeviceChecker.GetInstalledDevices(System.Collections.Generic.List{System.String},System.Collections.Generic.List{DeviceInfo})
  name.vb: GetInstalledDevices(List(Of String), List(Of DeviceInfo))
  fullName: CLib.DeviceChecker.GetInstalledDevices(System.Collections.Generic.List<string>, System.Collections.Generic.List<DeviceInfo>)
  fullName.vb: CLib.DeviceChecker.GetInstalledDevices(System.Collections.Generic.List(Of String), System.Collections.Generic.List(Of DeviceInfo))
  nameWithType: DeviceChecker.GetInstalledDevices(List<string>, List<DeviceInfo>)
  nameWithType.vb: DeviceChecker.GetInstalledDevices(List(Of String), List(Of DeviceInfo))
- uid: CLib.DeviceChecker.GetInstalledDevices*
  name: GetInstalledDevices
  href: api/CLib.DeviceChecker.html#CLib_DeviceChecker_GetInstalledDevices_
  commentId: Overload:CLib.DeviceChecker.GetInstalledDevices
  isSpec: "True"
  fullName: CLib.DeviceChecker.GetInstalledDevices
  nameWithType: DeviceChecker.GetInstalledDevices
- uid: CLib.DeviceFactory
  name: DeviceFactory
  href: api/CLib.DeviceFactory.html
  commentId: T:CLib.DeviceFactory
  fullName: CLib.DeviceFactory
  nameWithType: DeviceFactory
- uid: CLib.DeviceFactory.CreateDevice(System.String)
  name: CreateDevice(string)
  href: api/CLib.DeviceFactory.html#CLib_DeviceFactory_CreateDevice_System_String_
  commentId: M:CLib.DeviceFactory.CreateDevice(System.String)
  name.vb: CreateDevice(String)
  fullName: CLib.DeviceFactory.CreateDevice(string)
  fullName.vb: CLib.DeviceFactory.CreateDevice(String)
  nameWithType: DeviceFactory.CreateDevice(string)
  nameWithType.vb: DeviceFactory.CreateDevice(String)
- uid: CLib.DeviceFactory.CreateDevice*
  name: CreateDevice
  href: api/CLib.DeviceFactory.html#CLib_DeviceFactory_CreateDevice_
  commentId: Overload:CLib.DeviceFactory.CreateDevice
  isSpec: "True"
  fullName: CLib.DeviceFactory.CreateDevice
  nameWithType: DeviceFactory.CreateDevice
- uid: CLib.DeviceManager
  name: DeviceManager
  href: api/CLib.DeviceManager.html
  commentId: T:CLib.DeviceManager
  fullName: CLib.DeviceManager
  nameWithType: DeviceManager
- uid: CLib.DeviceManager.#ctor
  name: DeviceManager()
  href: api/CLib.DeviceManager.html#CLib_DeviceManager__ctor
  commentId: M:CLib.DeviceManager.#ctor
  name.vb: New()
  fullName: CLib.DeviceManager.DeviceManager()
  fullName.vb: CLib.DeviceManager.New()
  nameWithType: DeviceManager.DeviceManager()
  nameWithType.vb: DeviceManager.New()
- uid: CLib.DeviceManager.#ctor*
  name: DeviceManager
  href: api/CLib.DeviceManager.html#CLib_DeviceManager__ctor_
  commentId: Overload:CLib.DeviceManager.#ctor
  isSpec: "True"
  name.vb: New
  fullName: CLib.DeviceManager.DeviceManager
  fullName.vb: CLib.DeviceManager.New
  nameWithType: DeviceManager.DeviceManager
  nameWithType.vb: DeviceManager.New
- uid: CLib.DeviceManager.ScanForDevices
  name: ScanForDevices()
  href: api/CLib.DeviceManager.html#CLib_DeviceManager_ScanForDevices
  commentId: M:CLib.DeviceManager.ScanForDevices
  fullName: CLib.DeviceManager.ScanForDevices()
  nameWithType: DeviceManager.ScanForDevices()
- uid: CLib.DeviceManager.ScanForDevices*
  name: ScanForDevices
  href: api/CLib.DeviceManager.html#CLib_DeviceManager_ScanForDevices_
  commentId: Overload:CLib.DeviceManager.ScanForDevices
  isSpec: "True"
  fullName: CLib.DeviceManager.ScanForDevices
  nameWithType: DeviceManager.ScanForDevices
- uid: CLib.EtherCATDevice
  name: EtherCATDevice
  href: api/CLib.EtherCATDevice.html
  commentId: T:CLib.EtherCATDevice
  fullName: CLib.EtherCATDevice
  nameWithType: EtherCATDevice
- uid: CLib.EtherCATDevice.LoadDevice
  name: LoadDevice()
  href: api/CLib.EtherCATDevice.html#CLib_EtherCATDevice_LoadDevice
  commentId: M:CLib.EtherCATDevice.LoadDevice
  fullName: CLib.EtherCATDevice.LoadDevice()
  nameWithType: EtherCATDevice.LoadDevice()
- uid: CLib.EtherCATDevice.LoadDevice*
  name: LoadDevice
  href: api/CLib.EtherCATDevice.html#CLib_EtherCATDevice_LoadDevice_
  commentId: Overload:CLib.EtherCATDevice.LoadDevice
  isSpec: "True"
  fullName: CLib.EtherCATDevice.LoadDevice
  nameWithType: EtherCATDevice.LoadDevice
- uid: CLib.IDevice
  name: IDevice
  href: api/CLib.IDevice.html
  commentId: T:CLib.IDevice
  fullName: CLib.IDevice
  nameWithType: IDevice
- uid: CLib.IDevice.LoadDevice
  name: LoadDevice()
  href: api/CLib.IDevice.html#CLib_IDevice_LoadDevice
  commentId: M:CLib.IDevice.LoadDevice
  fullName: CLib.IDevice.LoadDevice()
  nameWithType: IDevice.LoadDevice()
- uid: CLib.IDevice.LoadDevice*
  name: LoadDevice
  href: api/CLib.IDevice.html#CLib_IDevice_LoadDevice_
  commentId: Overload:CLib.IDevice.LoadDevice
  isSpec: "True"
  fullName: CLib.IDevice.LoadDevice
  nameWithType: IDevice.LoadDevice
- uid: CLib.PciDeviceScanner
  name: PciDeviceScanner
  href: api/CLib.PciDeviceScanner.html
  commentId: T:CLib.PciDeviceScanner
  fullName: CLib.PciDeviceScanner
  nameWithType: PciDeviceScanner
